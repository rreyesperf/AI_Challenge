from flask import Flask, request, jsonify
import openai
import os  # For environment variables


app = Flask(__name__)

# Load the OpenAI API key from an environment variable (recommended)
openai.api_key = os.environ.get("OPENAI_API_KEY")

if not openai.api_key:
    raise ValueError("OpenAI API key not found.  Set the OPENAI_API_KEY environment variable.")



@app.route('/chat', methods=['POST'])
def chat():
    """
    Handles incoming messages and sends them to OpenAI for a response.

    Expects a JSON payload with a 'message' field.
    Returns a JSON response containing the OpenAI's reply.
    """
    try:
        data = request.get_json()
        if not data or 'message' not in data:
            return jsonify({'error': 'Invalid request.  Missing "message" field.'}), 400

        user_message = data['message']

        # Call the OpenAI API
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",  # Or another suitable model (e.g., "gpt-4")
            messages=[
                {"role": "system", "content": "You are a helpful assistant."},  # Define the persona
                {"role": "user", "content": user_message}
            ]
        )

        ai_response = response['choices'][0]['message']['content']

        return jsonify({'response': ai_response})

    except Exception as e:
        print(f"An error occurred: {e}")  # Log the error (important!)
        return jsonify({'error': str(e)}), 500



if __name__ == '__main__':
    app.run(debug=True)  # Use debug=False in production!